;PSGG Editor Backup File
version=1.1
file=IniUtilReadControl.xlsx
guid=a5779a4d-8412-45d9-bdd3-a317f284a1d1
;set read_from  excel or psgg
read_from=psgg
;set savemode with_excel or psgg_only
save_mode=psgg_only
;set check_excel_writable yes or no
check_excel_writable=no

------#======*<Guid(D13821FE-FA27-4B04-834C-CEC1E5670F48)>*======#------

sheet=state-chart
nameid_list=,n001,n002,n01c,n003,n004,n005,n006,,n007,,n008,,n009,n00a,n00b,n00c,,n00d,n00e,,n00f,n010,,n011,n012,,n013,n014,,,n022,n01e,n01f,n020,,n015,n016,n017,n018,,n019,n01a,n01b,,,,,,
stateid_list=,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,s0022,s0023,s0024,s0025,s0026,s0027,s0028,s0029,s002a,s002b,s002c,s002d,s002e,s002f,s0030,s0031,s0032,s0033,s0034,s0035,s0036
max_name_id=34
max_state_id=54
[id_name_dic]
n001=thumbnail
n002=state
n003=state-cmt
n004=state-ref
n005=basestate
n006=nextstate
n007=embed
n008=members
n009=vars
n00a=init
n00b=init-cmt
n00c=init-ref
n00d=update
n00e=update-cmt
n00f=wait
n010=wait-cmt
n011=post_wait
n012=post_wait-cmt
n013=gosubstate
n014=return
n015=branch
n016=branch-cmt
n017=brcond
n018=nowait
n019=!dir
n01a=!pos
n01b=!uuid
n01c=state-typ
n01e=loop_init
n01f=loop_cond
n020=loop_next
n022=loop


[id_state_dic]
s0022=S_START
s0023=S_END
s0024=E_0000
s0025=E_0001
s0026=S_SPLIT
s0027=S_IF_MAPG_EXISTS
s0028=S_LOP000
s0029=S_SBS000
s002a=S_RET000
s002b=S_CHECK
s002c=S_SBS001
s002d=S_INIT
s002e=S_CHECK_MAPG
s002f=S_CREATE_MAPG
s0030=S_REGISTER_MAPG
s0031=S_GET_GROUPNAME
s0032=S_GET_KEY_VAL1
s0033=S_GET_KEY_VAL
s0034=E_0002
s0035=S_PAS000
s0036=E_0003


[s0022]
n002=S_START
n01c=start
n006=S_INIT
n019=@@@
/
(100,100)
The root
@@@

n01a=41,340
n01b=1

[s0023]
n002=S_END
n01c=end
n019=@@@
/
(100,100)
The root
@@@

n01a=1099,331
n01b=2

[s0024]
n002=E_0000
n003=入力バッファ
n007=public var m_buf : String;
n019=@@@
/
(100,100)

@@@

n01a=50,46
n01b=3

[s0025]
n002=E_0001
n003=ワーク用
n007=@@@
var m_lines : Array<String>;
var m_index : Int;
var m_line  : String;
var m_mapg  : Map<String, Dynamic>;
var m_group : String;
@@@

n019=@@@
/
(100,100)

@@@

n01a=238,47
n01b=4

[s0026]
n002=S_SPLIT
n003=バッファ分解
n006=S_LOP000
n00a=@@@
m_lines = m_buf.split("\x0a");
for(i in 0...m_lines.length) {
    m_lines[i] = StringTools.rtrim(m_lines[i]);
}
@@@

n019=@@@
/
(100,100)

@@@

n01a=365,341
n01b=5

[s0027]
n001=(bitmap)
n002=S_IF_MAPG_EXISTS
n006=S_END
n00a=@@@
if (m_mapg!=null) {
    m_map.set(m_group, m_mapg);
    m_mapg = null;
}
@@@

n019=@@@
/
(100,100)

@@@

n01a=767,325
n01b=6

[s0028]
n002=S_LOP000
n01c=loop
n006=S_IF_MAPG_EXISTS
n013=S_SBS000
n01e=m_index = 0;
n01f=m_index < m_lines.length
n020=m_index+=1;
n019=@@@
/
(100,100)

@@@

n01a=586,341
n01b=7

[s0029]
n002=S_SBS000
n01c=substart
n006=S_SBS001
n019=@@@
/
(100,100)

@@@

n01a=117,567
n01b=8

[s002a]
n002=S_RET000
n01c=subreturn
n019=@@@
/
(100,100)

@@@

n01a=1651,810
n01b=9

[s002b]
n002=S_CHECK
n009=@@@
var bGroup = psgg.HxRegexUtil.IsMatch("^\\[.+\\]", m_line);
var bCmt   = psgg.HxRegexUtil.IsMatch("^\\s*;",m_line);
var bMulti = psgg.HxRegexUtil.IsMatch("^\\s*.+=@@@",m_line);
var bSingle= psgg.HxRegexUtil.IsMatch("^\\s*.+=.+",m_line);
@@@

n015=@@@
brifc(S_CHECK_MAPG);
brelseifc(S_GET_KEY_VAL1);
brelseifc(S_GET_KEY_VAL);
brelseifc(S_PAS000);
brelse(S_PAS000);
@@@

n016=@@@
グループ
複数行定義
一行定義
コメント行
?
@@@

n017=@@@
bGroup
bMulti
bSingle
bCmt
?
@@@

n019=@@@
/
(100,100)

@@@

n01a=429,568
n01b=10

[s002c]
n002=S_SBS001
n006=S_CHECK
n00a=m_line = m_lines[m_index];
n019=@@@
/
(100,100)

@@@

n01a=219,568
n01b=11

[s002d]
n002=S_INIT
n003=初期化
n006=S_SPLIT
n00a=@@@
m_map = new Map<String,Dynamic>();
m_mapg = null;
m_group = null;
@@@

n019=@@@
/
(100,100)

@@@

n01a=158,340
n01b=12

[s002e]
n002=S_CHECK_MAPG
n015=@@@
brifc(S_GET_GROUPNAME);
brelse(S_REGISTER_MAPG);
@@@

n016=@@@
?
?
@@@

n017=@@@
m_mapg==null
?
@@@

n019=@@@
/
(100,100)

@@@

n01a=662,611
n01b=13

[s002f]
n002=S_CREATE_MAPG
n006=S_RET000
n00a=m_mapg = new Map<String,Dynamic>();
n019=@@@
/
(100,100)

@@@

n01a=1307,541
n01b=14

[s0030]
n002=S_REGISTER_MAPG
n006=S_GET_GROUPNAME
n00a=@@@
m_map[m_group] = m_mapg;
m_mapg = null;
@@@

n019=@@@
/
(100,100)

@@@

n01a=873,708
n01b=15

[s0031]
n002=S_GET_GROUPNAME
n006=S_CREATE_MAPG
n00a=@@@
var  word = psgg.HxRegexUtil.Get1stMatch("\\[.+\\]",m_line);
word = word.substr(1);
word = word.substr(0,word.length-1);
m_group = word;
@@@

n019=@@@
/
(100,100)

@@@

n01a=1122,541
n01b=16

[s0032]
n002=S_GET_KEY_VAL1
n006=S_RET000
n00a=@@@
var eqindex = m_line.indexOf("=");
m_key = m_line.substr(0,eqindex);
m_key = StringTools.trim(m_key);
m_val = null;
m_index += 1;
while(m_index < m_lines.length) {
    m_line = m_lines[m_index];
    m_line = StringTools.rtrim(m_line);
    if (psgg.HxRegexUtil.IsMatch("^@@@$",m_line)) {
        break;
    }
    if (m_val!=null) {
        m_val += "\x0d\x0a";
        m_val += m_line;
    }
    else {
        m_val = m_line;
    }
    m_index += 1;
}
var map = m_mapg!=null ? m_mapg : m_map;
map.set(m_key,m_val);
@@@

n015=
n016=
n017=
n019=@@@
/
(100,100)

@@@

n01a=869,811
n01b=20

[s0033]
n002=S_GET_KEY_VAL
n006=S_RET000
n00a=@@@
var eqindex = m_line.indexOf("=");
m_key = m_line.substr(0,eqindex);
m_key = StringTools.trim(m_key);
m_val = m_line.substr(eqindex+1);
m_val = StringTools.trim(m_val);
var map = m_mapg != null ? m_mapg : m_map;
m_map.set(m_key,m_val);
@@@

n019=@@@
/
(100,100)

@@@

n01a=872,1054
n01b=18

[s0034]
n002=E_0002
n003=ワーク用２
n007=@@@
var m_key : String;
var m_val : String;
@@@

n019=@@@
/
(100,100)

@@@

n01a=426,50
n01b=19

[s0035]
n002=S_PAS000
n01c=pass
n006=S_RET000
n019=@@@
/
(100,100)

@@@

n01a=916,1380
n01b=21

[s0036]
n002=E_0003
n003=出力
n007=@@@
public var m_map   : Map<String, Dynamic>;
@@@

n019=@@@
/
(100,100)

@@@

n01a=53,146
n01b=22



------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=config

###VARIOUS-CONTENTS-BEGIN###
; The setting was created automatically. 2020/08/26 22:13:09
; * pssgEditor version : 0.66.5030.be6b2a7a2f9e64d0160759469b371cf04a1c84a1
psggfile=@@@
IniUtilReadControl.psgg
@@@
xlsfile=@@@
IniUtilReadControl.xlsx
@@@
guid=@@@
a5779a4d-8412-45d9-bdd3-a317f284a1d1
@@@
bitmap_width=5000
bitmap_height=2000
c_statec_cmt=1
c_thumbnail=1
c_contents=1
force_display_outpin=0
last_action=@@@
varied,Edited a state.
@@@
target_pathdir=@@@
/
@@@
state_location_list=@@@

@@@
nodegroup_comment_list=@@@
[{"Key":"\/","Value":"The root"}]
@@@
nodegroup_pos_list=@@@
[{"Key":"\/","Value":{"x":100,"y":100}}]
@@@
fillter_state_location_list=@@@
[{"Key":"\/","Value":[{"Key":"S_START","Value":{"x":41,"y":340}},{"Key":"S_END","Value":{"x":1099,"y":331}},{"Key":"S_SBS000","Value":{"x":117,"y":567}},{"Key":"S_RET000","Value":{"x":1651,"y":810}},{"Key":"S_SBS001","Value":{"x":219,"y":568}},{"Key":"S_LOP000","Value":{"x":586,"y":341}},{"Key":"E_0001","Value":{"x":238,"y":47}},{"Key":"E_0000","Value":{"x":50,"y":46}},{"Key":"S_SPLIT","Value":{"x":365,"y":341}},{"Key":"S_CHECK","Value":{"x":429,"y":568}},{"Key":"S_INIT","Value":{"x":158,"y":340}},{"Key":"S_CHECK_MAPG","Value":{"x":662,"y":611}},{"Key":"S_REGISTER_MAPG","Value":{"x":873,"y":708}},{"Key":"S_GET_GROUPNAME","Value":{"x":1122,"y":541}},{"Key":"S_CREATE_MAPG","Value":{"x":1307,"y":541}},{"Key":"E_0002","Value":{"x":426,"y":50}},{"Key":"S_GET_KEY_VAL","Value":{"x":872,"y":1054}},{"Key":"S_GET_KEY_VAL1","Value":{"x":869,"y":811}},{"Key":"S_IF_MAPG_EXISTS","Value":{"x":767,"y":325}},{"Key":"S_PAS000","Value":{"x":916,"y":1380}},{"Key":"E_0003","Value":{"x":53,"y":146}}]},{"Key":"\/hoge2\/","Value":[{"Key":"S_START","Value":{"x":50,"y":100}},{"Key":"S_END","Value":{"x":926,"y":87}}]}]
@@@
linecolor_data=@@@
[{"color":{"knownColor":0,"name":null,"state":2,"value":4285493103},"pattern":"BACKTO_"}]
@@@
use_external_command=0
external_command=@@@

@@@
source_editor_set=@@@

@@@
label_show=0
label_text=@@@
test
@@@
option_delete_thisstring=1
option_delete_br_string=1
option_delete_bracket_string=1
option_delete_s_state_string=1
option_copy_output_to_clipboard=0
option_convert_with_confirm=0
option_ignore_case_of_state=0
option_editbranch_automode=1
option_use_custom_prefix=0
option_omit_basestate_string=0
option_hide_basestate_contents=1
option_hide_branchcmt_onbranchbox=0
font_name=@@@
MS UI Gothic
@@@
font_size=11
comment_font_size=13
contents_font_size=10
state_width=140
state_height=20
state_short_width=50
state_short_height=20
comment_block_height=20
content_max_height=200
comment_block_fixed=0
line_space=-1
userbutton_title=@@@

@@@
userbutton_command=@@@

@@@
userbutton_callafterconvert=0
itemeditform_size_list=@@@
[{"Key":"state-typ","Value":{"height":398,"width":330}},{"Key":"init","Value":{"height":760,"width":760}}]
@@@
decoimage_typ_name=@@@
sym
@@@

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-source

###VARIOUS-CONTENTS-BEGIN###

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-statefunc

###VARIOUS-CONTENTS-BEGIN###
<<<?state/^C_/
eof>>>

/*
    [[state]]
    [[state-cmt]]
*/

<<<?state/^E_/
[[embed]]
eof>>>

<<<?state-typ/^start$/
function [[state]](bFirst : Bool)
{
    Goto($statemachine$_STATE.[[nextstate]]);
    NoWait();
}
eof>>>

<<<?state-typ/^end$/
function [[state]](bFirst : Bool)
{
}
eof>>>

<<<?state-typ/^gosub$/
function [[state]](bFirst : Bool)
{
    GoSubState($statemachine$_STATE.[[gosubstate]],$statemachine$_STATE.[[nextstate]]);
    NoWait();
}
eof>>>

<<<?state-typ/^substart$/
function [[state]](bFirst : Bool)
{
    Goto($statemachine$_STATE.[[nextstate]]);
    NoWait();
}
eof>>>

<<<?state-typ/^subreturn$/
function [[state]](bFirst : Bool)
{
    ReturnState();
    NoWait();
}
eof>>>

<<<?state-typ/^loop$/
[[members]]
function [[state]](bFirst : Bool)
{
    [[loop_init]]
    Goto($statemachine$_STATE.[[state]]_Check____);
    NoWait();
}
function [[state]]_Check____(bFirst : Bool)
{
    if ([[loop_cond]]) GoSubState($statemachine$_STATE.[[gosubstate]],$statemachine$_STATE.[[state]]_Next____);
    else               Goto($statemachine$_STATE.[[nextstate]]);
    NoWait();
}
function [[state]]_Next____(bFirst : Bool)
{
    [[loop_next]]
    Goto($statemachine$_STATE.[[state]]_Check____);
    NoWait();
}
eof>>>

[[members]]
function [[state]](bFirst : Bool)
{
    [[vars]]

    <<<?init
    //
    if (bFirst)
    {
        [[init]]
    }
    >>>

    [[update]]

    <<<?wait
    if ([[wait]]) return;
    >>>

    [[post_wait]]

    <<<?branch
    // branch
    [[branch]]
    >>>

    <<<?nextstate
    //
    if (!HasNextState())
    {
        Goto($statemachine$_STATE.[[nextstate]]);
    }
    >>>

    <<<?nowait
    //
    if (HasNextState())
    {
        NoWait();
    }
    >>>
}
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=setting.ini

###VARIOUS-CONTENTS-BEGIN###
[setting]

starterkit=@@@
https://github.com/NNNIC/psgg-starter-kit.git GIT-COMMIT-HASH
@@@








psgg=IniUtilReadControl.psgg
xls=IniUtilReadControl.xlsx
sub_src=
gen_src=IniUtilReadControl.hx

manager_src=
manager_dir=

template_src=
template_func=template-statefunc.txt

help=help.ini
helpweb=@@@
psgg-starter-kit\starterkit2\haxe\helpweb.html
@@@


src_enc=utf-8






kitpath=psgg-starter-kit\starterkit2\haxe

[setupinfo]

starterkit=@@@
https://github.com/NNNIC/psgg-starter-kit.git GIT-COMMIT-HASH
@@@








lang=haxe
framework=

statemachine=IniUtilReadControl
prefix=__PREFIX__
xlsdir=@@@
C:\Users\gea01\Documents\psgg\psgg-converter\tohaxe\src\main\tool
@@@




gendir=@@@
C:\Users\gea01\Documents\psgg\psgg-converter\tohaxe\src\main\tool
@@@




genrdir=.
incrdir=.

code_output_start=[PSGG OUTPUT START]
code_output_end=[PSGG OUTPUT END]






[jpn]

title=Haxe スタートキット  2019/10/31

detail=@@@
Haxe 用のステートマシンを作成します。

# ファイル

      IniUtilReadControl.pssg --- StateGoデータファイル。
      IniUtilReadControl.hx   --- 変換コードを本ファイルに埋め込む。

@@@





[en]

title=HAXE STARTER KIT 2019/10/31

detail=@@@
To create HAXE Stata machine.

# File:

      IniUtilReadControl.pssg  --- StateGo Data File.
      IniUtilReadControl.hx   -- The editor will insert converted source code to this file.

@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=help

###VARIOUS-CONTENTS-BEGIN###
[nextstate]

jpn=次に実行するステートを指定する。
en=Specify the next state to be executed.
[branch]

jpn=@@@
分岐処理を指定する。
１行に一つの分岐命令を書く。
GUIにより上書きされるため引数は適当に指定する。
例）
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

en=@@@
Specify branch functions.
Each line has a branch function.
Specify a tentavie parameter for each branch function because GUI overwrites the parameter.
i.e)
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

[update]

jpn=更新処理を指定する。
en=Specify a update process.
[wait]

jpn=@@@
待ち条件を指定する。
true時にループを解除する。
@@@

en=@@@
Specify a waiting condition.
Release the loop if the condition is true.
@@@

[gosubstate]

jpn=@@@
サブルーチンを呼び出す。
サブルーチンの開始ステート名を指定する。
@@@

en=@@@
Call a subroutine.
Specify the starting state name of the subroutine.
@@@

[return]

jpn=サブルーチン処理を終了するときに指定する。"return"等を記述。
en=@@@
Use for returning from the subroutine. Write "return" etc.
@@@

[loop_next]

en=loop  iterator advence.
jpn=ループのイテレーターを更新
[loop_cond]

en=loop condition
jpn=ループ条件
[state]

jpn=@@@
ステート名を指定する。
英文字、数字、アンダーバーで構成される。
先頭は英文字およびアンダーバー。
@@@

en=@@@
Specify a state name.
The state name consits of alphabet, number and underbar except that the head characther should be alphabet or a underbar.
@@@

[members]

jpn=メンバ変数及び関数等を指定する。
en=@@@
Specify members, variables, classes,  etc.
@@@

[post_wait]

jpn='wait'後の処理を指定する。
en=Specify the post process after 'wait'.
[vars]

jpn=変数宣言を指定する。
en=Specify variable definitions.
[nowait]

jpn=@@@
次のステートへ同期待ちをせず実行する時に 'nowait'等を指定する。
同期待ち時には何も指定しない。
@@@

en=@@@
Specify 'nowait' and so on if the next state will be execute without a sync wait.
Do not specify any word wheh the next state will be execute with a sync wait.
@@@

[embed]

jpn=@@@
コード埋め込み用。
ステート名がE_時に利用可能。
ステート機能は利用できない。
@@@

en=@@@
For embedding code.
Enable this section if state name starts with "E_".
Disabled state features.
@@@

[basestate]

jpn=継承元を指定する。
en=Specify inheritance source.
[!uuid]

jpn=システムがステートのuuid指定に使用。
en=@@@
System uses this for the uuid of the state.
@@@

[init]

jpn=初期化用処理を指定する。
en=Specify a initial process.
[!dir]

jpn=システムがステートのディレクトリ指定に使用。
en=@@@
System uses this for the directory path of the state.
@@@

[loop_init]

en=loop initialization
jpn=ループ用初期化
[thumbnail]

jpn=説明用のイメージを指定する。
en=@@@
Specify a image for explanation of this state.
@@@

[loop_break]

en=Condition if break
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=itemsinfo

###VARIOUS-CONTENTS-BEGIN###
[inpmethod]

init=
branch-cmt=
state-ref=
wait=
loop-next=
loop-cond=
embed=
loop_cond=
branch=
!dir=
basestate=
return=
post_wait-cmt=
state-cmt=
nowait=@@@
*select
nowait
@@@

members=
thumbnail=
update-cmt=
gosubstate=
loop_break=
loop_ver=
state-typ=@@@
*select
start
end
gosub
substart
subreturn
loop
@@@

!pos=
!uuid=
S_=
nextstate=
state=
loop_var=
wait-cmt=
loop-init=
update=
init-cmt=
loop-ver=
loop_next=
vars=
loop=
C_=
brcond=
E_=
init-ref=
loop_init=
post_wait=
[stateloc]

E_=S1
S_=S0
C_=S2
[itemcond]

thumbnail=read_only,share,S.+
gosubstate=read_only,exclusion,S0
branch=read_only,exclusion,S0
state=read_only,share,S.+
nextstate=read_only,exclusion,S0
return=read_only,exclusion,S0
brcond=read_only,exclusion,S0
embed=read_only,exclusion,S1
basestate=read_only,share,S.+
state-typ=read_only,exclusion,(S0)
###VARIOUS-CONTENTS-END###



------#======*<Guid(4DC98CBA-6257-4E26-A454-A53F85BC234C)>*======#------


